manifest {
    author = "Crauwels Charlotte, Sophie-Luise Heidig"
    version = "1.0.0"
    homePage = "https://github.com/Bio2Byte/simsapiper/"
    mainScript = "simsapiper.nf"
    name = "SIMSApiper"
    description = "A Nextflow pipeline that creates reliable, structure-informed MSAs of thousands of protein sequences which can supplement structural information from online resources automatically"
    defaultBranch = "main"
}

//create unique output folders
params.executionTimestamp = new java.text.SimpleDateFormat("yyyy_MM_dd_HH_mm_ss").format(new Date())

//Parameters to adapt run to dataset

params.condaEnvPath     = false   
params.apptainerPath    = "$launchDir"

params.data             = "$launchDir/data"
params.structures       = "$params.data/structures"
params.seqs             = "$params.data/seqs"
params.dsspPath         = "$params.data/dssp"

params.seqFormat        = "fasta" 
params.seqQC            = 5         
params.dropSimilar      = false 
params.favoriteSeqs     = false
params.stopHyperconserved = false

params.outFolder        = "$launchDir/results/simsa_${params.executionTimestamp}"
params.outName          = "finalMSA"
params.convertMSA       = false

params.createSubsets    = false 
params.minSubsetID      = 20 
params.maxSubsetSize    = true 
params.useSubsets       = false  

params.retrieve         = false        
params.model            = false 
params.localModel       = false        
params.strucQC          = 5          

params.mafftParams      = false       
params.tcoffeeParams    = false         
params.dssp             = false
params.squeeze          = false
params.squeezePerc      = 80
params.reorder          = false     

params.tree             = false

params.magic            = false
params.minimagic        = false
params.localmagic        = false

//run all 
if (params.magic){
        params.seqQC            = 5         
        params.dropSimilar      = 90        
        params.outName          = "magicMSA"
        params.createSubsets    = 30 
        params.minSubsetID      = "min"
        params.retrieve         = true        
        params.model            = true         
        params.strucQC          = 5          
        params.dssp             = true
        params.squeeze          = "H,E"
        params.reorder          = true  
}

if (params.localmagic){
        params.seqQC            = 5         
        params.dropSimilar      = 90        
        params.outName          = "magicMSA"
        params.createSubsets    = 30 
        params.minSubsetID      = "min"     
        params.localModel       = 2         
        params.strucQC          = 5          
        params.dssp             = true
        params.squeeze          = "H,E"
        params.reorder          = true  
}

if (params.minimagic){
        params.seqQC            = 10          
        params.outName          = "minimagicMSA"
        params.useSubsets       = true
        params.retrieve         = true        
        params.model            = true         
        params.strucQC          = 5          
        params.dssp             = true
        params.squeeze          = "H,E"
        params.squeezePerc      = 60
        params.reorder          = true  
}

//Parameter logics
//there can only be one
if (params.createSubsets) {params.useSubsets = false}

//type test useSubsets
if (params.useSubsets) {assert Boolean.isCase(params.useSubsets), " useSubsets can only be 'true' or 'false', please check your launch file or command line"}

//squeeze requries dssp
if (params.squeeze){params.dssp = true}

//minimal parameter value should be 1
//if (params.localModel){params.localModel = 1}

report {
    enabled = true
    file = "$params.outFolder/nextflow_report_${params.outName}.html"
    overwrite = true
}
    
trace {
    enabled = true
    raw = true
    file = "$params.outFolder/resources_${params.outName}.txt"
    overwrite = true
}

profiles {
    standard {
        process {
            executor = 'local'
            conda = "${params.condaEnvPath ? params.condaEnvPath : 'recipes/conda_env_m_apple_simsapiper.yml'}"
            container = 'slheidig/simsapiper:05'

            withName:'runTcoffee'{
                cpus = '2'
                memory = ' 2 GB'
                container='diazadriang/simsa-tcoffee:1.0.0'
            }
            withName:'esmFolds'{
                memory = 8.GB

                container='/apps/brussel/singularity/esmfold/esmfold-2.0.0.sif'
                singularity.runOptions = "--nv -B /databases "  //this needs to be fixed. can this be in the container?
            }
            withName:'phyloTree'{
                cpus = '4'
                memory = { 8.GB * task.attempt }

                container   = 'reslp/iqtree:2.0.7'
            }
        }
    }

    server {

        singularity {
                cacheDir = "$params.apptainerPath"
        }
        process {
            executor = 'local'
            queueSize = 10
            pollInterval = '5 sec'
            
            conda = "${params.condaEnvPath ? params.condaEnvPath : 'recipes/conda_env_server_simsapiper.yml'}"
            container = 'slheidig/simsapiper:05'
            
            withName:'runTcoffee'{
                cpus = '10'
                memory = '10 GB'
                container='diazadriang/simsa-tcoffee:1.0.0'
            }
            withName:'esmFolds'{
                memory = 20.GB

                container='/apps/brussel/singularity/esmfold/esmfold-2.0.0.sif'
                singularity.runOptions = "--nv -B /databases "  //this needs to be fixed. can this be in the container?
            }
            withName:'phyloTree'{
                cpus = '20'
                memory = { 20.GB * task.attempt }

                container   = 'reslp/iqtree:2.0.7'
            }
        }
    }

    hpc {

        singularity {
                cacheDir = "$params.apptainerPath"
        }
        
        process {
            executor = 'slurm' 
            cpus ='1'
            memory ='4 GB'
            time ='10min'

            pollInterval = '5 sec'

            queueSize = 10

            container = 'slheidig/simsapiper:05'

            withName:'runTcoffee'{
                executor = 'slurm'
                cpus = '10'
                memory = { 40.GB * task.attempt }
                time =  { 2.h * task.attempt * task.attempt * task.attempt }

                container='diazadriang/simsa-tcoffee:1.0.0'
            }
            withName:'esmFolds'{
                executor = 'slurm'
                time =  { 1.h * params.localModel } 
                memory = 20.GB

                container='/apps/brussel/singularity/esmfold/esmfold-2.0.0.sif'
                singularity.runOptions = "--nv -B /databases "  //this needs to be fixed. can this be in the container?
            }
            withName:'phyloTree'{
                executor = 'slurm'
                cpus = '20'
                memory = { 20.GB * task.attempt }
                time =  { 2.h * task.attempt * task.attempt } 

                container   = 'reslp/iqtree:2.0.7'
            }
        }
    }
  
    hydra { 
        singularity { //for dssp
                enabled = true
                cacheDir = "$VSC_SCRATCH_VO_USER/.apptainer"
        }
        
        process {
            executor = 'local' 
            cpus ='1'

            pollInterval = '5 sec'
            queueSize = 10

            module = 'Biopython/1.79-foss-2022a:SciPy-bundle/2022.05-foss-2022a:matplotlib/3.5.2-foss-2022a:MAFFT/7.505-GCC-11.3.0-with-extensions:BLAST+/2.13.0-gompi-2022a:CD-HIT/4.8.1-GCC-11.3.0'

            withName:'runTcoffee'{
                executor = 'slurm'
                module  = 'T-Coffee/13.45.61.3c310a9:TM-align/20190822-GCC-11.3.0:SAP/1.1.3-GCC-11.3.0 '
                cpus = '10'
                memory = { 40.GB * task.attempt }
                time =  { 2.h * task.attempt * task.attempt * task.attempt }
                //clusterOptions ='--mail-type=ALL'
                //clusterOptions = '--partition=skylake'
            }

            withName:'runDssp' { 
                container   = 'slheidig/dssp3:2'
            }  

            withName:'esmFolds'{
                executor = 'slurm'
                module  = 'legacy-software:ESM-2/2.0.0-foss-2021a-CUDA-11.3.1:OpenFold/1.0.1-foss-2021a-CUDA-11.3.1'
                time =  { 1.h * params.localModel } 
                memory = 20.GB
                clusterOptions = "--partition=ampere_gpu  --nodes=1 --gpus-per-node=1 --ntasks-per-gpu=1 --cpus-per-gpu=8"
            }

            withName:'phyloTree'{
                executor = 'slurm'
                module  = 'IQ-TREE/2.2.2.7-gompi-2023a'
                cpus = '20'
                memory = { 20.GB * task.attempt }
                time =  { 2.h * task.attempt * task.attempt } 
            }
        }
    }



    withdocker {
        docker.enabled = true
        singularity.enabled = false

        docker.temp = 'auto'
        //docker.runOptions = '-u \$(id -u):\$(id -g) '
    }

    withsingularity {
        docker.enabled = false
        singularity {
            enabled = true
            runOptions = "-B /run"
        }
    }

    withconda {
        conda.enabled = true
    }
}
